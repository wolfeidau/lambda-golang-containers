openapi: 3.0.0
servers:
  - url: 'https://todos.wolfe.id.au/v1'
  - url: 'http://todos.wolfe.id.au/v1'
info:
  title: Todo API
  description: Todo API
  version: 1.0.0
  termsOfService: 'https://todos.wolfe.id.au/terms/'
  contact:
    email: mark@wolfe.id.au
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: tasks
    description: Tasks
paths:
  /:
    get:
      tags:
        - tasks
      summary: Redirect to the UI
      description: |
        Default operation to redirect to the UI index page.
      operationId: redirectTodos
      responses:
        '302':
          description: redirect to the UI page
  /todos:
    get:
      tags:
        - tasks
      summary: List the available tasks
      description: |
        The list of tasks can be filtered by their status.
      operationId: listTodos
      parameters:
        - name: status
          in: query
          description: Filters the tasks by their status
          required: false
          schema:
            type: string
            enum:
              - done
              - waiting
              - working
              - all
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '400':
          description: Invalid status value
    post:
      tags:
        - tasks
      summary: Create a todo
      description: ''
      operationId: createTodo
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '405':
          description: Invalid input
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  description: The todo title
                  type: string
              required:
                - title
  '/todos/{todoId}':
    put:
      tags:
        - tasks
      summary: Update the todo
      description: |
        Update the todo title and status
      operationId: updateTodo
      parameters:
        - name: todoId
          in: path
          description: The todo identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: |
            The todo does not exist.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  description: The todo title
                  type: string
                status:
                  description: The todo status
                  type: string
                  enum:
                    - working
                    - waiting
                    - done
    delete:
      tags:
        - tasks
      summary: Delete the todo
      description: |
        Delete the todo
      operationId: deleteTodo
      parameters:
        - name: todoId
          in: path
          description: The todo identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: |
            No content.
        '404':
          description: |
            The todo does not exist.


components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The todo identifier
        title:
          type: string
          description: The todo title
        create_date:
          type: string
          format: date-time
          description: The todo creation date
        done_date:
          type: string
          format: date-time
          description: The todo resolution date
        status:
          type: string
          description: The todo state
          enum:
            - waiting
            - working
            - done
      required:
        - id
        - title
        - status
        - create_date
      example:
        id: 23
        title: Make the presentation
        description: password
        status: working
        create_date: '2017-12-24T00:00:00.000Z'